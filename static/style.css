/* Root Scope */
:root {
  /* CSS Variables */

  /* Define Colors as Colors */
  --black: #1b2d45;
  --green: #00ebc7;
  --red: #ff5470;
  --yellow: #fde24f;
  --darkBlue: #00214d;
  --grey: #bfbfbf;
  --lightGrey: #f2f4f6;
  --darkGrey: #222;
  --white: #fff;

  /* Define Colors Intentions */
  --primary: var(--green);
  --danger: var(--red);
  --background: var(--lightGrey);
  --textColor: var(--black);
  --lineColor: var(--darkBlue);
  --cardBackground: var(--white);
  --headerBackground: var(--darkBlue);
  --footerBackground: var(--darkBlue)
  --buttonTextColor: var(--primary);

  /* Styles */
  --line: solid 1px var(--lineColor);

  /* Typography */
  /* 100% is 16px, 112.5% is 18px */
  --baseFontSize: 100%;
  --headingFont: "Space Mono", monospace;
  --bodyFont: "Work Sans", sans-serif;
  --h1: 3.052rem;
  --h2: 2.441rem;
  --h3: 1.953rem;
  --h4: 1.563rem;
  --h5: 1.25rem;
  --smallText: 0.8rem;

  /* Elevation */
  --level-1: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  --level-2: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --level-3: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --level-4: 0 20px 25px -5px rgba(0, 0, 0, 0.1),
    0 10px 10px -5px rgba(0, 0, 0, 0.04);

  /* Positioning */
  --containerPadding: 2.5%;
  --headerHeight: 3rem;
  --borderRadius: 10px;
}

/* The styling for the main, needs to be in _layout.svelte or remove */
/* Don't use IDs for styling, use element or classes */
/* Don't use !important */

/* Specificity */
/* 
Least to Most
 - Elements h1, div
 - Class, attribute
 - IDs
 - !important
 - Load Order, last will apply

 - Nested classes will take precedence over single class
*/

/* Typography 
https://type-scale.com/
https://www.fontpair.co/

em is relative to parent or container
rem is relative to html root
avoid pixels

*/

/* From https://type-scale.com/ */
@import url("https://fonts.googleapis.com/css?family=Work+Sans:400|Space+Mono:400");

/*16px*/
html {
  font-size: var(--baseFontSize);
  /* This adjusts how the padding is measured?? */
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

.layout {
  /* margin: 0 auto;
  width: 95%; */
  padding: calc(2rem + var(--headerHeight)) var(--containerPadding);
}

/* Grid Layouts */
.grid {
  --gridCols: 2;
  display: block;
  grid-template-columns: repeat(var(--gridCols), 1fr);
}

.cols-3 {
  --gridCols: 3;
}

.cols-4 {
  --gridCols: 4;
}

.split {
  display: grid;
  grid-template-columns: 33% 67%;
  grid-gap: 20px;
}

.flex {
  --justifyContent: space-between;
  display: block;
  justify-content: var(--justifyContent);
}

.flex-around {
  --justifyContent: space-around;
}

header {
  background: var(--headerBackground);
  color: var(--white);
  height: var(--headerHeight);
  box-shadow: var(--level-2);
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 var(--containerPadding);
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
}

header nav a {
  color: var(--white);
  text-decoration: none;
}

header nav a:hover {
  border-bottom: solid 2px var(--yellow);
}

/* The plus a only puts the margin on a element it it is next to another element */
header nav a + a {
  margin-left: 10px;
}

footer {
  --footerTextColor: var(--lightGrey);
  background: var(--black);
  color: var(--white);
  padding: 2rem var(--containerPadding);
  text-align: center;
  position: fixed;
  left: 0;
  bottom: 0;
  width: 100%;
}

footer a {
  color: var(--footerTextColor);
}

footer p {
  margin-bottom: 0;
  max-width: none;
}

body {
  background: var(--background);
  color: var(--textColor);
  font-family: var(--bodyFont);
  font-weight: 400;
  line-height: 1.75;
}

p {
  margin-bottom: 1rem;
  max-width: 40em;
}

p a {
  /* Anchor tag within a paragraph */
  color: var(--black);
  text-decoration: none;
  border-bottom: solid 2px var(--primary);
  cursor: pointer;
}

/* Hover for anchor tags in a paragraph */
p a:hover {
  color: red;
  font-size: 1.1rem;
}

/* All anchor tags */
/* a {
   Anchor tag within a paragraph 
  color: var(--black);
  text-decoration: none;
  border-bottom: solid 2px var(--primary);
  cursor: pointer;
} 
*/

h1,
h2,
h3,
h4,
h5 {
  margin: 3rem 0 1.38rem;
  font-family: var(--headingFont);
  font-weight: 400;
  line-height: 1.3;
}

h1 {
  margin-top: 0;
  font-size: var(--h1);
}

h2 {
  font-size: var(--h2);
}

h3 {
  font-size: var(--h3);
}

h4 {
  font-size: var(--h4);
}

h5 {
  font-size: var(--h5);
}

small,
.text_small {
  font-size: var(--smallText);
}

blockquote {
  border: solid 1px var(--darkBlue);
  margin: 10px;
  padding: 2em;
  background: var(--white);
  box-shadow: var(--level-3);
}

label {
  display: block;
  font-size: var(--smallText);
}

input,
textarea {
  --borderRadius: 4px;
  border: var(--line);
  border-radius: var(--borderRadius);
  padding: 4px 5px;
}

select {
  border: var(--line);
}

hr {
  border-top: var(--line);
}

textarea {
  height: 6rem;
  width: 100%;
}

/* Pseudo Element */
::placeholder {
  color: var(--grey);
}

button {
  appearance: none;
  color: var(--buttonTextColor);
  background-color: var(--primary);
  border: none;
  border-radius: var(--borderRadius);
  padding: 5px 25px;
  box-shadow: var(--level-1);
  cursor: pointer;
}

button:hover {
  box-shadow: var(--level-2);
  transition: 0.3s ease-in-out box-shadow;
}

button.cancel {
  --buttonColor: var(--danger);
  --textColor: var(--white);
}

/* Style based on attribute */
button[disabled] {
  opacity: 0.4;
}

button.small {
  font-size: var(--smallText);
  padding: 5px 10px;
}

.fake-logo {
  font-size: var(--baseFontSize);
  margin: 0;
}

.card {
  padding: 2em;
  background: var(--cardBackground);
  box-shadow: var(--level-3);
  border-radius: var(--borderRadius);
}

/* First child element within a card */
.card > *:first-child {
  margin-top: 0;
}

.card > *:last-child {
  margin-bottom: 0;
}

.dark {
  --background: var(--black);
  --textColor: var(--lightGrey);
  --cardBackground: var(--darkGrey);
  --headerBackground: var(--darkGrey);
  --buttonTextColor: var(--black);
  --footerBackground: var(--darkGrey);
}

/* Media Queries */
/* Can't use css variables in media queries */
@media only screen and (min-width: 500px) {
  /* body {
    background: red !important;
  } */

  :root {
    --baseFontSize: 112.5%;
  }

  .grid {
    display: grid;
  }

  .flex {
    display: flex;
  }
}
